{
  "storage": [
    {
      "astId": 26,
      "contract": "contracts/kyc/Accessor.sol:Accessor",
      "label": "_roles",
      "offset": 0,
      "slot": "0",
      "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
    },
    {
      "astId": 548,
      "contract": "contracts/kyc/Accessor.sol:Accessor",
      "label": "_roleMembers",
      "offset": 0,
      "slot": "1",
      "type": "t_mapping(t_bytes32,t_struct(AddressSet)14267_storage)"
    },
    {
      "astId": 15739,
      "contract": "contracts/kyc/Accessor.sol:Accessor",
      "label": "userPerMap",
      "offset": 0,
      "slot": "2",
      "type": "t_mapping(t_address,t_uint256)"
    }
  ],
  "types": {
    "t_address": {
      "encoding": "inplace",
      "label": "address",
      "numberOfBytes": "20"
    },
    "t_array(t_bytes32)dyn_storage": {
      "base": "t_bytes32",
      "encoding": "dynamic_array",
      "label": "bytes32[]",
      "numberOfBytes": "32"
    },
    "t_bool": {
      "encoding": "inplace",
      "label": "bool",
      "numberOfBytes": "1"
    },
    "t_bytes32": {
      "encoding": "inplace",
      "label": "bytes32",
      "numberOfBytes": "32"
    },
    "t_mapping(t_address,t_bool)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => bool)",
      "numberOfBytes": "32",
      "value": "t_bool"
    },
    "t_mapping(t_address,t_uint256)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => uint256)",
      "numberOfBytes": "32",
      "value": "t_uint256"
    },
    "t_mapping(t_bytes32,t_struct(AddressSet)14267_storage)": {
      "encoding": "mapping",
      "key": "t_bytes32",
      "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
      "numberOfBytes": "32",
      "value": "t_struct(AddressSet)14267_storage"
    },
    "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
      "encoding": "mapping",
      "key": "t_bytes32",
      "label": "mapping(bytes32 => struct AccessControl.RoleData)",
      "numberOfBytes": "32",
      "value": "t_struct(RoleData)21_storage"
    },
    "t_mapping(t_bytes32,t_uint256)": {
      "encoding": "mapping",
      "key": "t_bytes32",
      "label": "mapping(bytes32 => uint256)",
      "numberOfBytes": "32",
      "value": "t_uint256"
    },
    "t_struct(AddressSet)14267_storage": {
      "encoding": "inplace",
      "label": "struct EnumerableSet.AddressSet",
      "members": [
        {
          "astId": 14266,
          "contract": "contracts/kyc/Accessor.sol:Accessor",
          "label": "_inner",
          "offset": 0,
          "slot": "0",
          "type": "t_struct(Set)13952_storage"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_struct(RoleData)21_storage": {
      "encoding": "inplace",
      "label": "struct AccessControl.RoleData",
      "members": [
        {
          "astId": 18,
          "contract": "contracts/kyc/Accessor.sol:Accessor",
          "label": "hasRole",
          "offset": 0,
          "slot": "0",
          "type": "t_mapping(t_address,t_bool)"
        },
        {
          "astId": 20,
          "contract": "contracts/kyc/Accessor.sol:Accessor",
          "label": "adminRole",
          "offset": 0,
          "slot": "1",
          "type": "t_bytes32"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_struct(Set)13952_storage": {
      "encoding": "inplace",
      "label": "struct EnumerableSet.Set",
      "members": [
        {
          "astId": 13947,
          "contract": "contracts/kyc/Accessor.sol:Accessor",
          "label": "_values",
          "offset": 0,
          "slot": "0",
          "type": "t_array(t_bytes32)dyn_storage"
        },
        {
          "astId": 13951,
          "contract": "contracts/kyc/Accessor.sol:Accessor",
          "label": "_positions",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_bytes32,t_uint256)"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_uint256": {
      "encoding": "inplace",
      "label": "uint256",
      "numberOfBytes": "32"
    }
  }
}
